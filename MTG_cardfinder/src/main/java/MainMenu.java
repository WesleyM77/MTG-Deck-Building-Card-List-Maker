/* MTG Card Finder - Takes a list of cards and prints a list so one knows where to look in their sorted collection.
 * Copyright (C) 2017 Wesley Mauk
 *
 * This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
import java.util.ArrayList;


public class MainMenu extends javax.swing.JFrame {

    
    private Controller theController;
    /**
     * Creates new form MainMenu
     */
    public MainMenu(Controller controller) {
        initComponents();
        theController = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CardListTextArea = new javax.swing.JTextArea();
        SubmitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CardListTextArea.setColumns(30);
        CardListTextArea.setRows(5);
        jScrollPane1.setViewportView(CardListTextArea);

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane1)
                    .addComponent(SubmitButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SubmitButton)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // get all cardnames from the textfield and send them to the controller
        ArrayList theCardList = new ArrayList<String>();
        String[] cards = CardListTextArea.getText().split("\\n");
        int size = CardListTextArea.getLineCount();
        int amount[] = new int[size];
        int sizeToPass = size;
        
        for(int c = 0; c < size; c++)
        {
            String temp = cards[c];
            if(temp.isEmpty())// the line is blank
            {
                sizeToPass--;
                amount[c] = 0;
                continue;
            }
            char ch = temp.charAt(0);            
            
            //lets figure out how many they need
            if (Character.isDigit(ch)) //they listed how many
            {
                //process string
                //WARNING: very rudimentary and assumes 
                char ch2 = temp.charAt(1);   
                char ch3 = temp.charAt(2);   
                
                if ((Character.isWhitespace(ch3) || ch3 == 'x') && ch2 != 'x') // This is where we will split it & they need more than 9 (2 digits)
                {
                    
                    int tempQuant = (Character.getNumericValue(ch) * 10) + Character.getNumericValue(ch2);
                    temp = temp.substring(3);
                    theCardList.add(temp);
                    if(c>0)
                        {
                        if(amount[c-1] == 0)
                        {
                            amount[c-1] = tempQuant;
                        }
                    }
                    else
                        amount[c] = tempQuant;
                    
                }
                else if (Character.isWhitespace(ch2) || ch2 == 'x') // This is where we will split it & they need less than 10 (1 digit)
                {
                    int tempQuant = Character.getNumericValue(ch);
                    temp = temp.substring(2);
                    theCardList.add(temp);
                    if(c>0)
                        {
                        if(amount[c-1] == 0)
                        {
                            amount[c-1] = tempQuant;
                        }
                    }
                    else
                        amount[c] = tempQuant;
                }
                
            } 
            else 
            {
                theCardList.add(temp);
                if(c>0)
                {
                    if(amount[c-1] == 0)
                    {
                        amount[c-1] = 1;
                    }
                }
                else
                    amount[c] = 1;
            }
        } // end for loop
        
        

        theController.requestGenerateList(theCardList, amount, sizeToPass);
    }//GEN-LAST:event_SubmitButtonActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CardListTextArea;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
    
}
